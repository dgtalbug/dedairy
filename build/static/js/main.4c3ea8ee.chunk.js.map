{"version":3,"sources":["utils/config.js","context/Context.js","pages/AddContact.js","context/action.types.js","components/Contact.js","pages/Contacts.js","layout/Header.js","layout/Footer.js","pages/ViewContact.js","pages/SearchContact.js","pages/PageNotFound.js","context/reducer.js","App.js","serviceWorker.js","index.js"],"names":["imageConfig","quality","maxWidth","maxHeight","autoRotate","ContactContext","createContext","AddContact","useContext","state","dispatch","contactToUpdate","contactToUpdateKey","history","useHistory","useState","name","setName","email","setEmail","phoneNumber","setPhoneNumber","isUploading","setIsUploading","downloadUrl","setDownloadUrl","isUpdate","setIsUpdate","useEffect","picture","imagePicker","e","a","file","target","files","metadata","contentType","type","readAndCompressImage","resizedImage","firebase","storage","ref","storageRef","uploadTask","child","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","error","toast","getDownloadURL","then","downloadURL","catch","err","console","addContact","database","v4","set","createdAt","Date","now","updatedAt","updateContact","Container","fluid","className","Row","Col","md","Form","onSubmit","preventDefault","validator","isMobilePhone","payload","key","push","htmlFor","src","alt","FormGroup","Input","id","placeholder","value","onChange","Spinner","color","multiple","Button","block","Contact","contact","contactKey","defaultAvatarUrl","toDateString","onClick","remove","Contacts","Searchkey","contacts","isLoading","length","ListGroup","Object","entries","map","ListGroupItem","Header","Navbar","light","NavbarBrand","tag","Link","to","NavbarText","NavItem","Footer","ViewContact","Card","CardBody","height","width","CardTitle","CardSubtitle","href","searchKey","setSearchKey","setIsLoading","searchHandler","orderByChild","equalTo","val","style","display","float","PageNotFound","action","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initialState","App","useReducer","reducer","getContacts","Provider","exact","path","component","SearchContact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4c3ea8ee.chunk.js","sourcesContent":["export const firebaseConfig = {\n  apiKey: \"AIzaSyD1D_ESdSN1ZBVYeg1luzKF4IW81jmYn1I\",\n  authDomain: \"dedairy-b4d2b.firebaseapp.com\",\n  databaseURL: \"https://dedairy-b4d2b.firebaseio.com\",\n  projectId: \"dedairy-b4d2b\",\n  storageBucket: \"dedairy-b4d2b.appspot.com\",\n  messagingSenderId: \"128765315624\",\n  appId: \"1:128765315624:web:0de6a5fe696add822ec31d\",\n  measurementId: \"G-15MLVHWNQJ\",\n};\n\n//image configuration\nexport const imageConfig = {\n  quality: 0.2,\n  maxWidth: 800,\n  maxHeight: 600,\n  autoRotate: true,\n};\n\nexport const defaultAvatarUrl =\n  \"https://firebasestorage.googleapis.com/v0/b/dedairy-b4d2b.appspot.com/o/images%2Fdefault-avatar.png?alt=media&token=39879684-36ae-4531-af35-123443fb0e72\";\n","import { createContext } from \"react\";\n\nexport const ContactContext = createContext();\n","import React, { useState, useContext, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\n\nimport {\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Button,\n  Spinner,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// to compress image before uploading to the server\nimport { readAndCompressImage } from \"browser-image-resizer\";\n\n// configs for image resizing\nimport { imageConfig } from \"../utils/config\";\n\nimport { v4 } from \"uuid\";\n\nimport { ContactContext } from \"../context/Context\";\nimport { CONTACT_TO_UPDATE } from \"../context/action.types\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport validator from \"validator\";\n\nconst AddContact = () => {\n  const { state, dispatch } = useContext(ContactContext);\n  const { contactToUpdate, contactToUpdateKey } = state;\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const defaultAvatar = useState(\n    \"gs://dedairy-b4d2b.appspot.com/images/default-avatar.png\"\n  );\n  useEffect(() => {\n    if (contactToUpdate) {\n      setName(contactToUpdate.name);\n      setEmail(contactToUpdate.email);\n      setPhoneNumber(contactToUpdate.phoneNumber);\n      setDownloadUrl(contactToUpdate.picture);\n\n      setIsUpdate(true);\n    }\n  }, [contactToUpdate]);\n\n  const imagePicker = async (e) => {\n    try {\n      const file = e.target.files[0];\n      var metadata = {\n        contentType: file.type,\n      };\n      let resizedImage = await readAndCompressImage(file, imageConfig);\n      const storageRef = await firebase.storage().ref();\n      var uploadTask = storageRef\n        .child(\"images/\" + file.name)\n        .put(resizedImage, metadata);\n      uploadTask.on(\n        firebase.storage.TaskEvent.STATE_CHANGED,\n        (snapshot) => {\n          setIsUploading(true);\n          var progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n              setIsUploading(false);\n              // console.log(\"Uploading is Paused\");\n              break;\n\n            case firebase.storage.TaskState.RUNNING:\n              // console.log(\"Uploading is in Progress\");\n              // toast(`Uploading ${progress} %`, { type: \"info\" });\n              setIsUploading(true);\n              break;\n\n            default:\n              break;\n          }\n          if (progress === 100) {\n            setIsUploading(false);\n          }\n        },\n        (error) => {\n          toast(\"Something is wrong in state change\", { type: \"error\" });\n        },\n        () => {\n          uploadTask.snapshot.ref\n            .getDownloadURL()\n            .then((downloadURL) => {\n              setDownloadUrl(downloadURL);\n              // toast(\"Image Added\", { type: \"info\" });\n            })\n            .catch((err) => console.error(err));\n        }\n      );\n    } catch (error) {\n      console.error(error);\n      toast(\"Something went Wrong\", { type: \"error\" });\n    }\n  };\n\n  const addContact = async () => {\n    try {\n      firebase\n        .database()\n        .ref(\"contacts/\" + v4())\n        .set({\n          name,\n          email,\n          phoneNumber,\n          picture: downloadUrl,\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n        });\n      toast(\"Contact Added \", { type: \"success\" });\n    } catch (err) {\n      console.error(err);\n      toast(\"Cant Add Now\", { type: \"error\" });\n    }\n  };\n\n  const updateContact = async () => {\n    try {\n      firebase\n        .database()\n        .ref(\"contacts/\" + contactToUpdateKey)\n        .set({\n          name,\n          email,\n          phoneNumber,\n          picture: downloadUrl,\n          updatedAt: Date.now(),\n        });\n      toast(\"Contact Updated \", { type: \"success\" });\n    } catch (error) {\n      console.error(error);\n      toast(\"Cant update Now\", { type: \"error\" });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !email || !phoneNumber) {\n      toast(\"Please Fill in all Details\", { type: \"warning\" });\n      return;\n    }\n    if (!validator.isMobilePhone(phoneNumber)) {\n      toast(\"Please Enter the valid Phone Number\", { type: \"warning\" });\n      return;\n    }\n    isUpdate ? updateContact() : addContact();\n\n    dispatch({\n      type: CONTACT_TO_UPDATE,\n      payload: null,\n      key: null,\n    });\n\n    history.push(\"/\");\n  };\n\n  return (\n    <Container fluid className=\"mt-5\">\n      <Row>\n        <Col md=\"6\" className=\"card offset-md-3\">\n          <h2 className=\"text-center text-secondary\">Welcome to E-Dairy</h2>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"text-center\">\n              <div>\n                <label htmlFor=\"imagepicker\" className=\"\">\n                  {downloadUrl ? (\n                    <img src={downloadUrl} alt=\"\" className=\"profile\" />\n                  ) : (\n                    \" \"\n                  )}\n                </label>\n              </div>\n            </div>\n\n            <FormGroup>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Email\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                name=\"number\"\n                id=\"honenumber\"\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n                placeholder=\"Phone Number\"\n              />\n            </FormGroup>\n\n            {isUploading ? (\n              <Spinner type=\"grow\" color=\"primary\" />\n            ) : !downloadUrl ? (\n              <FormGroup>\n                <Input\n                  type=\"file\"\n                  name=\"image\"\n                  id=\"imagepicker\"\n                  multiple={false}\n                  onChange={(e) => imagePicker(e)}\n                />\n              </FormGroup>\n            ) : (\n              \"\"\n            )}\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              block\n              className=\"text-uppercase\"\n            >\n              {isUpdate ? \"Update Contact\" : \"Add Contact\"}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddContact;\n","export const SET_LOADING = \"SET_LOADING\";\nexport const SET_CONTACT = \"SET_CONTACT\";\nexport const CONTACT_TO_UPDATE = \"CONTACT_TO_UPDATE\";\nexport const SET_SINGLE_CONTACT = \"SET_SINGLE_CONTACT\";\nexport const SET_SEARCH_RESULT = \"SET_SEARCH_RESULT\";\n","import React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n// import { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\nimport firebase from \"firebase/app\";\nimport { ContactContext } from \"../context/Context\";\nimport { CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"../context/action.types\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { defaultAvatarUrl } from \"../utils/config\";\n// import { defaultAvatar } from \"./defaultAvatar.png\";\n\nconst Contact = ({ contact, contactKey }) => {\n  const { dispatch } = useContext(ContactContext);\n  const defaultAvatar = defaultAvatarUrl;\n  const history = useHistory();\n\n  const deleteContact = () => {\n    firebase\n      .database()\n      .ref(`/contacts/${contactKey}`)\n      .remove()\n      .then(() => {\n        toast(\"Contact Deleted\", { type: \"success\" });\n      })\n      .catch((err) => {\n        console.error(err);\n        toast(\"Cant Delete Now\", { type: \"error\" });\n      });\n  };\n\n  const updateContact = () => {\n    dispatch({\n      type: CONTACT_TO_UPDATE,\n      payload: contact,\n      key: contactKey,\n    });\n    history.push(\"/contact/add\");\n  };\n\n  const viewSingleContact = (contact) => {\n    dispatch({\n      type: SET_SINGLE_CONTACT,\n      payload: contact,\n    });\n    history.push(\"/contact/view\");\n  };\n\n  const updatedAt = (contact) => {\n    let diffForHumans = new Date(contact.updatedAt);\n    return diffForHumans.toDateString();\n  };\n\n  return (\n    <>\n      <Row>\n        <Col\n          md=\"1\"\n          className=\"d-flex justify-content-center align-items-center\"\n        ></Col>\n        <Col\n          md=\"2\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <img\n            src={contact.picture ? contact.picture : defaultAvatar}\n            alt=\"\"\n            className=\"img-circle profile\"\n          />\n        </Col>\n        <Col md=\"6\">\n          <div className=\"text-primary\">{contact.name}</div>\n\n          <div className=\"text-secondary\">{contact.phoneNumber}</div>\n          <div className=\"text-secondary\">{contact.email}</div>\n\n          <div className=\"text-info\">{updatedAt(contact)}</div>\n        </Col>\n        <Col\n          md=\"2\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <MdDelete\n            onClick={() => deleteContact()}\n            color=\"danger\"\n            className=\"text-danger icon\"\n          />\n          <MdEdit\n            className=\"icon text-info ml-2\"\n            onClick={() => updateContact()}\n          />\n        </Col>\n        <Col\n          md=\"1\"\n          className=\"d-flex justify-content-center align-items-center\"\n        ></Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contact;\n","import React, { useContext } from \"react\";\n\nimport { Container, ListGroup, ListGroupItem, Spinner } from \"reactstrap\";\nimport Contact from \"../components/Contact\";\nimport { ContactContext } from \"../context/Context\";\nimport AddContactComponent from \"./AddContact\";\n\nconst Contacts = (Searchkey) => {\n  const { state } = useContext(ContactContext);\n\n  const { contacts, isLoading } = state;\n\n  if (isLoading) {\n    return (\n      <div className=\"Center\">\n        <Spinner color=\"primary\" />\n        <div className=\"text-primary\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <Container className=\"mt-4\">\n      {contacts.length === 0 && !isLoading ? (\n        <AddContactComponent />\n      ) : (\n        <ListGroup>\n          {Object.entries(contacts).map(([key, value]) => (\n            <ListGroupItem key={key}>\n              <Contact contact={value} contactKey={key} />\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport { Navbar, NavbarBrand, NavbarText, NavItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <Navbar color=\"primary\" light>\n      <NavbarBrand tag={Link} to=\"/\" className=\"text-white\">\n        E-Dairy\n      </NavbarBrand>\n      <NavbarText className=\"text-white float-right\">\n        <NavItem tag={Link} to=\"/contact/search\" className=\"text-white p-2\">\n          Home\n        </NavItem>\n\n        <NavItem tag={Link} to=\"/contact/add\" className=\"text-white p-2\">\n          Add\n        </NavItem>\n      </NavbarText>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"text-center pt-3 pb-2 mt-5 \">\n      <p className=\"p-10\">&copy; E-Dairy 2020</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from \"react\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from \"reactstrap\";\nimport { FaEnvelope, FaPhone } from \"react-icons/fa\";\nimport { ContactContext } from \"../context/Context\";\nimport { defaultAvatarUrl } from \"../utils/config\";\nconst ViewContact = () => {\n  const { state } = useContext(ContactContext);\n  const { contact } = state;\n  const defaultAvatar = defaultAvatarUrl;\n  return (\n    <Container>\n      <Row className=\"mt-5 mb-5\">\n        <Col md=\"5\" className=\"offset-md-3\">\n          <Card className=\"pt-3 pb-5\">\n            <CardBody className=\"text-center \">\n              <img\n                height=\"150\"\n                width=\"150\"\n                className=\"cardImg profile border-danger\"\n                src={contact.picture ? contact.picture : defaultAvatar}\n                alt=\"\"\n              />\n              <CardTitle className=\"text-primary mt-3\">\n                <h1>{contact?.name}</h1>\n              </CardTitle>\n              <CardSubtitle>\n                <h3>\n                  <FaPhone className=\"mr-2\" />\n                  {contact?.phoneNumber}\n                </h3>\n              </CardSubtitle>\n              <a\n                className=\"btn btn-primary btn-block\"\n                // eslint-disable-next-line react/jsx-no-target-blank\n                target=\"_blank\"\n                href={`mailto:{contact?.email}`}\n              >\n                <FaEnvelope className=\"icon mr-2\" />\n                {contact?.email}\n              </a>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ViewContact;\n","import React, { useState, useContext } from \"react\";\nimport firebase from \"firebase/app\";\n\nimport { Container, Row, Col, Form, Input, Button, Spinner } from \"reactstrap\";\nimport Contacts from \"../pages/Contacts\";\nimport { toast } from \"react-toastify\";\n\nimport { SET_SEARCH_RESULT } from \"../context/action.types\";\nimport { ContactContext } from \"../context/Context\";\nconst ViewContact = () => {\n  const { state, dispatch } = useContext(ContactContext);\n  const { contacts } = state;\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchHandler = async () => {\n    try {\n      firebase\n        .database()\n        .ref(\"contacts\")\n        .orderByChild(\"phoneNumber\")\n        .equalTo(searchKey)\n        .on(\"value\", function (snapshot) {\n          if (snapshot.val() === null) {\n            toast(\"Contact Not Found\", { type: \"warning\" });\n          } else {\n            dispatch({\n              type: SET_SEARCH_RESULT,\n              payload: snapshot.val(),\n            });\n            toast(\"Populating Results\", { type: \"warning\" });\n          }\n          setIsLoading(false);\n        });\n    } catch (error) {\n      console.error(error);\n      toast(\"Something Wrong\", { type: \"error\" });\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!searchKey) {\n      toast(\"Please Enter Search Term To Proceed\", { type: \"warning\" });\n      return;\n    }\n    setIsLoading(true);\n    searchHandler();\n  };\n  return (\n    <Container fluid className=\"\">\n      <Row>\n        <Col md=\"6\" className=\"card offset-md-3\">\n          <Form onSubmit={handleSubmit}>\n            <Input\n              type=\"text\"\n              name=\"searchKey\"\n              id=\"name\"\n              placeholder=\"Search\"\n              value={searchKey}\n              onChange={(e) => setSearchKey(e.target.value)}\n              style={{ width: \"80%\", display: \"unset\" }}\n            />\n            <Button\n              color=\"primary\"\n              type=\"submit\"\n              className=\"text-uppercase\"\n              style={{ float: \"right\" }}\n            >\n              Search\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n      {isLoading ? <Spinner type=\"grow\" color=\"primary\" /> : <Contacts />}\n    </Container>\n  );\n};\n\nexport default ViewContact;\n","import React from \"react\";\n\nconst PageNotFound = () => {\n  return (\n    <div>\n      <h1>404 page not found</h1>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import {\n  SET_CONTACT,\n  SET_LOADING,\n  CONTACT_TO_UPDATE,\n  SET_SINGLE_CONTACT,\n  SET_SEARCH_RESULT,\n} from \"./action.types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null\n        ? { ...state, contacts: [] }\n        : { ...state, contacts: action.payload };\n\n    case SET_LOADING:\n      return { ...state, isLoading: action.payload };\n\n    case CONTACT_TO_UPDATE:\n      return {\n        ...state,\n        contactToUpdate: action.payload,\n        contactToUpdateKey: action.key,\n      };\n\n    case SET_SINGLE_CONTACT:\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n\n    case SET_SEARCH_RESULT:\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { firebaseConfig } from \"./utils/config\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport AddContact from \"./pages/AddContact\";\nimport Contacts from \"./pages/Contacts\";\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport ViewContact from \"./pages/ViewContact\";\nimport SearchContact from \"./pages/SearchContact\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport reducer from \"./context/reducer\";\nimport { ContactContext } from \"./context/Context\";\nimport { SET_CONTACT, SET_LOADING } from \"./context/action.types\";\n\nfirebase.initializeApp(firebaseConfig);\n\nconst initialState = {\n  contacts: [],\n  contact: {},\n  contactToUpdate: null,\n  contactToUpdateKey: null,\n  isLoading: false,\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const getContacts = async () => {\n    dispatch({\n      type: SET_LOADING,\n      payload: true,\n    });\n\n    const contactsRef = await firebase.database().ref(\"/contacts\");\n    contactsRef.on(\"value\", (snapshot) => {\n      dispatch({\n        type: SET_CONTACT,\n        payload: snapshot.val(),\n      });\n      dispatch({\n        type: SET_LOADING,\n        payload: false,\n      });\n    });\n  };\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  return (\n    <Router>\n      <ContactContext.Provider value={{ state, dispatch }}>\n        <ToastContainer />\n        <Header />\n        <Container>\n          <Switch>\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/contact/view\" component={ViewContact} />\n            <Route exact path=\"/contact/search\" component={SearchContact} />\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"*\" component={PageNotFound} />\n          </Switch>\n        </Container>\n\n        <Footer />\n      </ContactContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}